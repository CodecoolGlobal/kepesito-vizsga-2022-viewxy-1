{"uid":"45b0ce5b84721398","name":"TableTest()","fullName":"SeleniumTest.TableTest","historyId":"90bd90d18d69e52cfe89900659137b4b","time":{"start":1658233371127,"stop":1658233374390,"duration":3263},"description":"","status":"failed","statusMessage":"expected: <Tiger Nixon\r\nGarrett Winters\r\nAshton Cox\r\nCedric Kelly\r\nAiri Satou\r\nBrielle Williamson\r\nHerrod Chandler\r\nRhona Davidson\r\nColleen Hurst\r\nSonya Frost\r\nJena Gaines\r\nQuinn Flynn\r\nCharde Marshall\r\nHaley Kennedy\r\nTatyana Fitzpatrick\r\nMichael Silva\r\nPaul Byrd\r\nGloria Little\r\nBradley Greer\r\nDai Rios\r\nJenette Caldwell\r\nYuri Berry\r\nCaesar Vance\r\nDoris Wilder\r\nAngelica Ramos\r\nGavin Joyce\r\nJennifer Chang\r\nBrenden Wagner\r\nFiona Green\r\nShou Itou\r\nMichelle House> but was: <Tiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House\nTiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House>","statusTrace":"org.opentest4j.AssertionFailedError: expected: <Tiger Nixon\r\nGarrett Winters\r\nAshton Cox\r\nCedric Kelly\r\nAiri Satou\r\nBrielle Williamson\r\nHerrod Chandler\r\nRhona Davidson\r\nColleen Hurst\r\nSonya Frost\r\nJena Gaines\r\nQuinn Flynn\r\nCharde Marshall\r\nHaley Kennedy\r\nTatyana Fitzpatrick\r\nMichael Silva\r\nPaul Byrd\r\nGloria Little\r\nBradley Greer\r\nDai Rios\r\nJenette Caldwell\r\nYuri Berry\r\nCaesar Vance\r\nDoris Wilder\r\nAngelica Ramos\r\nGavin Joyce\r\nJennifer Chang\r\nBrenden Wagner\r\nFiona Green\r\nShou Itou\r\nMichelle House> but was: <Tiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House\nTiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n\tat SeleniumTest.TableTest(SeleniumTest.java:139)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:129)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1658233371127,"stop":1658233371372,"duration":245},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"dispose","time":{"start":1658233374289,"stop":1658233374388,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"host","value":"fv-az121-392"},{"name":"thread","value":"3314@fv-az121-392.ForkJoinPool-1-worker-3(16)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"SeleniumTest"},{"name":"testClass","value":"SeleniumTest"},{"name":"testMethod","value":"TableTest"},{"name":"suite","value":"SeleniumTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"caedc673bbcf051d","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/12//#testresult/caedc673bbcf051d","status":"failed","statusDetails":"expected: <Tiger Nixon\r\nGarrett Winters\r\nAshton Cox\r\nCedric Kelly\r\nAiri Satou\r\nBrielle Williamson\r\nHerrod Chandler\r\nRhona Davidson\r\nColleen Hurst\r\nSonya Frost\r\nJena Gaines\r\nQuinn Flynn\r\nCharde Marshall\r\nHaley Kennedy\r\nTatyana Fitzpatrick\r\nMichael Silva\r\nPaul Byrd\r\nGloria Little\r\nBradley Greer\r\nDai Rios\r\nJenette Caldwell\r\nYuri Berry\r\nCaesar Vance\r\nDoris Wilder\r\nAngelica Ramos\r\nGavin Joyce\r\nJennifer Chang\r\nBrenden Wagner\r\nFiona Green\r\nShou Itou\r\nMichelle House> but was: <Tiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House\nTiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House>","time":{"start":1658233013793,"stop":1658233016980,"duration":3187}},{"uid":"dd2db04f29181fd","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/11//#testresult/dd2db04f29181fd","status":"failed","statusDetails":"expected: <Tiger Nixon\r\nGarrett Winters\r\nAshton Cox\r\nCedric Kelly\r\nAiri Satou\r\nBrielle Williamson\r\nHerrod Chandler\r\nRhona Davidson\r\nColleen Hurst\r\nSonya Frost\r\nJena Gaines\r\nQuinn Flynn\r\nCharde Marshall\r\nHaley Kennedy\r\nTatyana Fitzpatrick\r\nMichael Silva\r\nPaul Byrd\r\nGloria Little\r\nBradley Greer\r\nDai Rios\r\nJenette Caldwell\r\nYuri Berry\r\nCaesar Vance\r\nDoris Wilder\r\nAngelica Ramos\r\nGavin Joyce\r\nJennifer Chang\r\nBrenden Wagner\r\nFiona Green\r\nShou Itou\r\nMichelle House> but was: <Tiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House\nTiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House>","time":{"start":1658232498485,"stop":1658232501280,"duration":2795}},{"uid":"2a98e13b4705b539","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/10//#testresult/2a98e13b4705b539","status":"failed","statusDetails":"expected: <Tiger Nixon\r\nGarrett Winters\r\nAshton Cox\r\nCedric Kelly\r\nAiri Satou\r\nBrielle Williamson\r\nHerrod Chandler\r\nRhona Davidson\r\nColleen Hurst\r\nSonya Frost\r\nJena Gaines\r\nQuinn Flynn\r\nCharde Marshall\r\nHaley Kennedy\r\nTatyana Fitzpatrick\r\nMichael Silva\r\nPaul Byrd\r\nGloria Little\r\nBradley Greer\r\nDai Rios\r\nJenette Caldwell\r\nYuri Berry\r\nCaesar Vance\r\nDoris Wilder\r\nAngelica Ramos\r\nGavin Joyce\r\nJennifer Chang\r\nBrenden Wagner\r\nFiona Green\r\nShou Itou\r\nMichelle House> but was: <Tiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House\nTiger Nixon\nGarrett Winters\nAshton Cox\nCedric Kelly\nAiri Satou\nBrielle Williamson\nHerrod Chandler\nRhona Davidson\nColleen Hurst\nSonya Frost\nJena Gaines\nQuinn Flynn\nCharde Marshall\nHaley Kennedy\nTatyana Fitzpatrick\nMichael Silva\nPaul Byrd\nGloria Little\nBradley Greer\nDai Rios\nJenette Caldwell\nYuri Berry\nCaesar Vance\nDoris Wilder\nAngelica Ramos\nGavin Joyce\nJennifer Chang\nBrenden Wagner\nFiona Green\nShou Itou\nMichelle House>","time":{"start":1658232089322,"stop":1658232092674,"duration":3352}},{"uid":"a3510fab86debecd","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/9//#testresult/a3510fab86debecd","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az135-707', ip: '10.1.1.155', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658231919800,"stop":1658231920038,"duration":238}},{"uid":"4091f039ed819168","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/8//#testresult/4091f039ed819168","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az377-697', ip: '10.1.0.75', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658229456292,"stop":1658229456506,"duration":214}},{"uid":"781840de20c6d8b1","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/7//#testresult/781840de20c6d8b1","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az202-851', ip: '10.1.0.253', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658229096127,"stop":1658229096302,"duration":175}},{"uid":"1684d654ded2b5b1","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/6//#testresult/1684d654ded2b5b1","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az177-748', ip: '10.1.0.144', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658228404916,"stop":1658228405214,"duration":298}},{"uid":"6f745efea55f9025","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/5//#testresult/6f745efea55f9025","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az284-949', ip: '10.1.1.143', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658227255806,"stop":1658227255995,"duration":189}},{"uid":"4b55d4e00ae8997c","reportUrl":"https://CodecoolGlobal.github.io/kepesito-vizsga-2022-viewxy-1/4//#testresult/4b55d4e00ae8997c","status":"broken","statusDetails":"Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'fv-az182-543', ip: '10.1.0.133', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1014-azure', java.version: '16.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --disable-notifications, --disable-extensions, --window-size=1920,1080, --incognito], extensions: []}}}]","time":{"start":1658226075066,"stop":1658226075290,"duration":224}}]},"tags":[]},"source":"45b0ce5b84721398.json","parameterValues":[]}